{"version":3,"sources":["./src/app/contact.service.ts","./src/environments/environment.ts","./src/app/contact-detail/contact-detail.component.ts","./src/app/contact-detail/contact-detail.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/Products.component.ts","./src/products.component.html","./src/app/contact-list/contact-list.component.ts","./src/app/contact-list/contact-list.component.html","./src/app/app-routing.module.ts","./src/services/getProduct.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  API_URL:string=\"/api/\"\n  constructor(private http:HttpClient) { }\n  getContacts()\n  {\n    return this.http.get(this.API_URL+'contacts')\n  }\n  getcontact(id)\n  {\n    return this.http.get(`${this.API_URL + 'contacts'}/${id}`) \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ContactService } from '../contact.service';\n\n@Component({\n  selector: 'app-contact-detail',\n  templateUrl: './contact-detail.component.html',\n  styleUrls: ['./contact-detail.component.css']\n})\nexport class ContactDetailComponent implements OnInit {\n\n  contact: any;\n  constructor(private contactService: ContactService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n    console.log(params.get('id'))\n     this.contactService.getcontact(params.get('id')).subscribe(c =>{\n        console.log(c);\n        this.contact = c;\n    })   \n    });\n\n  }\n}\n","<h1> Contact # {{contact.id}}</h1>\n<p>\n  Name: {{contact.name}} \n</p>\n<p>\n Email: {{contact.email_id}}\n</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Ang-Routes';\n}\n","<h2><a [routerLink] = \"'/contacts'\">Contacts</a></h2>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BackendService } from './backend.service';\nimport { ContactListComponent } from './contact-list/contact-list.component';\nimport { ContactDetailComponent } from './contact-detail/contact-detail.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { productsComponent } from 'src/Products.component';\nimport { ProductsService } from 'src/services/getProduct.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {MatInputModule} from \"@angular/material/input\";\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormsModule } from '@angular/forms';\nimport { NgHttpLoaderModule } from 'ng-http-loader';\n//https://www.smashingmagazine.com/2018/11/a-complete-guide-to-routing-in-angular/\n//https://therichpost.com/angular-9-material-carousel-slider/\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactListComponent,\n    ContactDetailComponent,productsComponent\n  ],\n  imports: [\n    BrowserModule,AppRoutingModule,HttpClientModule, BrowserAnimationsModule,MatTableModule,MatButtonModule,\n    MatTooltipModule,NgbModule,MatInputModule,MatIconModule,FormsModule,NgHttpLoaderModule.forRoot()],\n  providers: [ProductsService],\n  bootstrap: [productsComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core'\r\nimport { ProductsService } from './services/getProduct.service';\r\nimport {MatTableDataSource } from \"@angular/material/table\"\r\nimport {TooltipPosition} from '@angular/material/tooltip';\r\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\r\n@Component({\r\n  selector: 'products',\r\n  templateUrl: './products.component.html',\r\n  //providers: [NgbCarouselConfig] \r\n})\r\n\r\nexport class productsComponent implements OnInit {\r\n  public records: any;\r\n  public dataSource:MatTableDataSource<any>;\r\n  public displayedColumns:string[]= [\"ID\",\"CATEGORY\",\"SUB\",\"BRAND\",\"PRICE\",\"ITEMCOUNT\",\"IMAGE\"];\r\n public  positionOptions: TooltipPosition[] = ['below', 'above', 'left', 'right'];\r\n public slides=  ['https://images-eu.ssl-images-amazon.com/images/G/31/img20/Wireless/WLA/November/Heroes/WithoutBunting/realmebudsclassic/pc-1x._CB415354809_.jpg','https://images-eu.ssl-images-amazon.com/images/G/31/IMG20/Home/BAU/Banners/GW_1500x600-min._CB406905169_.jpg','https://images-eu.ssl-images-amazon.com/images/G/31/img19/AmazonPay/Boson/Sid/CCBP/Nov/BAU/Credit-Card-Bill_1500x600_without._CB415288872_.jpg'\r\n ,'https://images-eu.ssl-images-amazon.com/images/G/31/prime/Gateway/2020/May/gaming_1500x600._CB431281464_.jpg',\r\n'https://images-eu.ssl-images-amazon.com/images/G/31/img20/Wireless/SamsungM/17thNov/RV1/Tallhero_1500x600._CB415341732_.jpg',\r\n'https://images-eu.ssl-images-amazon.com/images/G/31/img20/Luggage/nov/ATF/Unrec/GW_PC_BUNK_luggage1500x600._CB415364628_.jpg']\r\n ;\r\n  constructor(public productsservice: ProductsService ,config: NgbCarouselConfig) { \r\n    config.interval = 1000;\r\n    config.keyboard = true;\r\n    config.pauseOnHover = true;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  \r\n\r\n    //subscribing the observable as getEmployees is observable\r\n   /* this.productsservice.getallProducts().subscribe((posRes) => {\r\n\r\n      console.log(\"pos resonse received \" + posRes)\r\n      this.records = posRes.products;\r\n    }, (errRes) => {\r\n      console.log(\"err resonse received \" + errRes.body)\r\n      this.records = errRes;\r\n    })\r\n    */\r\n  }\r\n  CategoryProducts(category): void {\r\n\r\n    this.productsservice.getCategoryProducts(category).subscribe((posRes) => {\r\n\r\n      console.log(\"pos resonse received \" + posRes)\r\n      this.records = posRes.products;\r\n      this.dataSource=new MatTableDataSource(this.records);\r\n    }, (errRes) => {\r\n      console.log(\"err resonse received \" + errRes.body)\r\n      this.records = errRes;\r\n     \r\n    })\r\n  }\r\n\r\n  AllProducts(): void {\r\n\r\n    this.productsservice.getallProducts().subscribe((posRes) => {\r\n\r\n      console.log(\"pos resonse received \" + posRes)\r\n      this.records = posRes.products;\r\n      this.dataSource=new MatTableDataSource(this.records);\r\n    }, (errRes) => {\r\n      console.log(\"err resonse received \" + errRes.body)\r\n      this.records = errRes;\r\n    \r\n    })\r\n  }\r\n}\r\n\r\n\r\n","<!-- <h1> Shopping Cart</h1>\r\n<button (click)=\"AllProducts()\">All Products</button>\r\n<button (click)=\"CategoryProducts('Fashion')\">Fashion</button>\r\n<button (click)=\"CategoryProducts('HomeApp')\">Home Appliances</button>\r\n<button (click)=\"CategoryProducts('Mobile')\">Mobile</button>\r\n<style>\r\n    table {\r\n        table-layout: fixed !important;\r\n    }\r\n\r\n    thead tr {\r\n        border: 1px solid black;\r\n        width: 500px !important;\r\n        position: fixed !important;\r\n    }\r\n\r\n    tbody tr {\r\n        border: 1px solid black;\r\n        width: 500px !important;\r\n    }\r\n\r\n    th,\r\n    td {\r\n        border: 1px solid black;\r\n        width: 100px;\r\n    }\r\n</style>\r\n<div *ngIf=\"records.length >0\">\r\n    <table>\r\n\r\n        <th>\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>CATEGORY</th>\r\n                <th>SUB</th>\r\n                <th>BRAND</th>\r\n                <th>PRICE</th>\r\n                <th>ITEMCOUNT</th>\r\n                <th>IMAGE</th>\r\n            </tr>\r\n        </th>\r\n        <tbody>\r\n            <div *ngFor=\"let x of records\">\r\n                <tr>\r\n                    <td>{{x.id}}</td>\r\n                    <td>{{x.category}}</td>\r\n                    <td>{{x.subcategory}}</td>\r\n                    <td>{{x.brand}}</td>\r\n                    <td>{{x.price}}</td>\r\n                    <td>{{x.items}}</td>\r\n                    <td><img src={{x.img}} width=\"100px\" height=\"50px\" /></td>\r\n                </tr>\r\n            </div>\r\n        </tbody>\r\n    </table>\r\n\r\n</div> -->\r\n    <div>\r\n        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR1QSqfRaBcrwcOxMrM7jNrX7THu0mfBQyITw&usqp=CAU'\r\n            style=\"width: 100px;\" />\r\n            <mat-form-field class=\"example-form-field\">\r\n                <mat-label>Enter product details</mat-label>\r\n                <input matInput type=\"text\">\r\n              </mat-form-field>\r\n    </div>\r\n    \r\n\r\n<div style=\"margin: 20px\">\r\n    <button mat-raised-button color=\"primary\" (click)=\"AllProducts()\">All Products</button>\r\n    <button mat-raised-button color=\"accent\" (click)=\"CategoryProducts('Fashion')\">Fashion</button>\r\n    <button mat-raised-button color=\"primary\" (click)=\"CategoryProducts('HomeApp')\">Home Appliances</button>\r\n    <button mat-raised-button color=\"accent\" (click)=\"CategoryProducts('Mobile')\">Mobile</button>\r\n    <button mat-raised-button color=\"primary\" (click)=\"CategoryProducts('Laptops')\">Laptops</button>\r\n\r\n</div>\r\n<style>\r\n    th {\r\n        background-color: cadetblue;\r\n        font-size: medium;\r\n    }\r\n\r\n    button {\r\n        margin-right: 150px\r\n    }\r\n\r\n    ngb-carousel .wrapper {\r\n        position: relative;\r\n        height: 0;\r\n        padding-top: 25%;\r\n        /* Keep ratio for 900x500 images */\r\n    }\r\n\r\n    ngb-carousel .wrapper>img {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n    }\r\n</style>\r\n\r\n<ngb-carousel>\r\n    <ng-template ngbSlide *ngFor=\"let x of slides\">\r\n        <div class=\"wrapper\">\r\n            <img [src]=\"x\" style=\"width: 100%; height: 50vh\" alt=\"Random first slide\">\r\n        </div>\r\n    </ng-template>\r\n</ngb-carousel>\r\n<div style=\"margin: 50px\" class=\"mat-elevation-z8\">\r\n    <table style=\"  width: 100%;\" mat-table [dataSource]=\"dataSource\" >\r\n      \r\n        <ng-container matColumnDef=\"ID\">\r\n            <th mat-header-cell *matHeaderCellDef>ID</th>\r\n            <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\r\n\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"CATEGORY\">\r\n            <th mat-header-cell *matHeaderCellDef>CATEGORY</th>\r\n            <td mat-cell *matCellDef=\"let row\">{{row.category}}</td>\r\n\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"SUB\">\r\n            <th mat-header-cell *matHeaderCellDef>SUB</th>\r\n            <td mat-cell *matCellDef=\"let row\">{{row.subcategory}}</td>\r\n\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"BRAND\">\r\n            <th mat-header-cell *matHeaderCellDef>BRAND</th>\r\n            <td mat-cell *matCellDef=\"let row\">{{row.brand}}</td>\r\n\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"PRICE\">\r\n            <th mat-header-cell *matHeaderCellDef>PRICE</th>\r\n            <td mat-cell *matCellDef=\"let row\">{{row.price}}</td>\r\n\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"ITEMCOUNT\">\r\n            <th mat-header-cell *matHeaderCellDef>ITEMCOUNT</th>\r\n            <td mat-cell *matCellDef=\"let row\">{{row.items}}</td>\r\n\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"IMAGE\">\r\n            <th mat-header-cell *matHeaderCellDef>IMAGE</th>\r\n            <td mat-cell *matCellDef=\"let row\"><img src={{row.img}} width=\"100px\" height=\"50px\" /></td>\r\n\r\n        </ng-container>\r\n\r\n        <tr #tooltip=\"matTooltip\" matTooltip=\"Info about the products\" [matTooltipPosition]=\"positionOptions[0]\"\r\n            matTooltipHideDelay=\"10000\" mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row;columns:displayedColumns\" #tooltip=\"matTooltip\" matTooltip='ID:{{row|json}}'\r\n            [matTooltipPosition]=\"positionOptions[0]\"></tr>\r\n\r\n\r\n    </table>\r\n\r\n    <ng-http-loader></ng-http-loader>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ContactService } from '../contact.service';\n\n@Component({\n  selector: 'app-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.css']\n})\nexport class ContactListComponent implements OnInit {\n\n  contacts:any[]=[];\n  constructor(private contactService:ContactService) { }\n\n  ngOnInit(): void {\n    this.contactService.getContacts().subscribe((data:any[])=>{\n      console.log(data)\n      this.contacts= data;\n    })\n  }\n\n}\n","<table style=\"width:100%\">\n    <tr>\n      <th>Name</th>\n      <th>Email</th>\n      <th>Actions</th>\n    </tr>\n    <tr *ngFor=\"let contact of contacts\" >\n      <td>{{ contact.name }}</td>\n      <td>{{ contact.email_id }}</td> \n      <td>\n      <a [routerLink]=\"['/contacts', contact.id]\">Go to details</a>\n      </td>\n    </tr>\n  </table>\n  ","import {NgModule}from '@angular/core'\r\nimport {Routes,RouterModule} from '@angular/router'\r\nimport { ContactDetailComponent } from './contact-detail/contact-detail.component';\r\nimport { ContactListComponent } from './contact-list/contact-list.component';\r\n\r\nconst routs:Routes=[\r\n\r\n    {path:'contacts',component:ContactListComponent},\r\n    {path:'contacts/:id',component:ContactDetailComponent}\r\n];\r\n@NgModule({\r\n    imports:[RouterModule.forRoot(routs, { relativeLinkResolution: 'legacy' })],\r\n    exports:[RouterModule]\r\n})\r\nexport class AppRoutingModule\r\n{\r\n\r\n}","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\n\r\n@Injectable(\r\n    {\r\n        providedIn: \"root\"\r\n    }\r\n)\r\n\r\nexport class ProductsService {\r\n    constructor(public httpservice: HttpClient) { }\r\n    public getallProducts():Observable<any> {\r\n       console.log(\"in get products\")\r\n        return this.httpservice.get(\"http://localhost:8080/Allproducts\")\r\n    }\r\n    public getCategoryProducts(category):Observable<any> {\r\n        console.log(\"in fashion products\")\r\n         return this.httpservice.get(\"http://localhost:8080/products/category/\"+category)\r\n     }\r\n\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}